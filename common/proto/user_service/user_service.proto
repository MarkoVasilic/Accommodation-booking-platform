syntax = "proto3";

option go_package = "github.com/MarkoVasilic/Accommodation-booking-platform/common/proto/user_service";

package user_service;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service UserService{
        rpc GetUser(GetUserRequest) returns(GetUserResponse) {
        	option (google.api.http) = {
			get: "/accommodation/user/{id}"
		};
        }
        rpc GetLoggedUser(GetLoggedUserRequest) returns(GetLoggedUserResponse) {
        	option (google.api.http) = {
			get: "/accommodation/user/logged"
		};
        }
        rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
                option (google.api.http) = {
                    post: "/accommodation/user"
                    body: "*"
                };
        }
        rpc Login(LoginRequest) returns (LoginResponse) {
                option (google.api.http) = {
                        post: "/accommodation/login"
                        body: "*"
                };
        }
        rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
                option (google.api.http) = {
                        put: "/accommodation/user/{id}"
                        body: "*"
                };
        }
        rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
                option (google.api.http) = {
                        delete: "/accommodation/user/{id}"
                };
        }
        rpc GetAllHosts(GetAllHostsRequest) returns(GetAllHostsResponse) {
        	option (google.api.http) = {
			get: "/accommodation/user/host/all"
		};
        }
        rpc CreateUserGrade(CreateUserGradeRequest) returns (CreateUserGradeResponse) {
                option (google.api.http) = {
                    post: "/accommodation/user/grade"
                    body: "*"
                };
        }

        rpc GetAllGuestGrades(GetAllGuestGradesRequest) returns(GetAllGuestGradesResponse) {
        	option (google.api.http) = {
			get: "/accommodation/user/guest/grades/{id}"
		};
        }
        rpc UpdateUserGrade(UpdateUserGradeRequest) returns (UpdateUserGradeResponse) {
                option (google.api.http) = {
                        put: "/accommodation/user/grade/{id}"
                        body: "*"
                };
        }
        rpc DeleteUserGrade(DeleteUserGradeRequest) returns (DeleteUserGradeResponse) {
                option (google.api.http) = {
                        delete: "/accommodation/user/grade/{id}"
                };
        }
        rpc GetAllUserGrade(GetAllUserGradeRequest) returns(GetAllUserGradeResponse) {
        	option (google.api.http) = {
			get: "/accommodation/user/grade/{id}"
		};
        }
        rpc HostProminent(HostProminentRequest) returns(HostProminentResponse) {
        	option (google.api.http) = {
			get: "/accommodation/user/prominent/{id}"
		};
        }

        rpc UpdateNotificationOn(UpdateNotificationOnRequest) returns (UpdateNotificationOnResponse) {
                option (google.api.http) = {
                        put: "/accommodation/user/notificationon/{id}"
                        body: "*"
                };
        }

        rpc CreateNotification(CreateNotificationRequest) returns (CreateNotificationResponse) {
                option (google.api.http) = {
                    post: "/accommodation/user/notification"
                    body: "*"
                };
        }
        rpc GetAllNotifications(GetAllNotificationsRequest) returns(GetAllNotificationsResponse) {
        	option (google.api.http) = {
			get: "/accommodation/user/notification/{id}"
		};
        }
        rpc GetUserNotificationsOn(GetUserNotificationsOnRequest) returns(GetUserNotificationsOnResponse) {
        	option (google.api.http) = {
			get: "/accommodation/user/notificationsOn/{id}"
		};
        }
}

message User {
        string Id = 1;
        string Username = 2;
        string FirstName = 3;
        string LastName = 4;
        string Password = 5;
        string Email = 6;
        string Address = 7;
        string Token = 8;
        string Role = 9;
}

message GetUserRequest {
        string id = 1;
}

message GetUserResponse {
        User user = 1;
}

message GetLoggedUserRequest {
}

message GetLoggedUserResponse {
        User user = 1;
}

message LoginRequest {
        string Password = 1;
        string Username = 2;
}

message LoginResponse {
        User user = 1;
}

message CreateUserRequest {
        string Username = 1;
        string FirstName = 2;
        string LastName = 3;
        string Password = 4;
        string Email = 5;
        string Address = 6;
        string Role = 7;
}

message CreateUserResponse {
        string message = 1;
}

message UpdateUserRequest {
        string id = 1;
        string Username = 2;
        string FirstName = 3;
        string LastName = 4;
        string Password = 5;
        string Email = 6;
        string Address = 7;
}

message UpdateUserResponse {
        string message = 1;
}

message DeleteUserRequest {
        string id = 1;
}

message DeleteUserResponse {
        string message = 1;
}

message HostDetails {
        string id = 1;
        string FirstName = 2;
        string LastName = 3;
}

message GetAllHostsRequest {
}

message GetAllHostsResponse {
        repeated HostDetails Hosts = 1;
}

message UserGrade {
        string ID = 1;
        string GuestID = 2;
        string HostID = 3;
        double Grade = 4;
        google.protobuf.Timestamp DateOfGrade = 5;
}

message CreateUserGradeRequest {
        string GuestID = 1;
        string HostID = 2;
        double Grade = 3;
        google.protobuf.Timestamp DateOfGrade = 4;
}

message CreateUserGradeResponse {
        string message = 1;
}

message GetAllGuestGradesRequest {
        string id = 1;
}

message GetAllGuestGradesResponse {
        repeated UserGradeDetails UserGradeDetails = 1;
}

message UpdateUserGradeRequest {
        string id = 1;
        double Grade = 2;
}

message UpdateUserGradeResponse {
        string message = 1;
}

message DeleteUserGradeRequest {
        string id = 1;
}

message DeleteUserGradeResponse {
        string message = 1;
}

message UserGradeDetails {
        string ID = 1;
        string GuestFirstName = 2;
        string GuestLastName = 3;
        string HostFirstName = 4;
        string HostLastName = 5;
        double Grade = 6;
        google.protobuf.Timestamp DateOfGrade = 7;
}

message UserGradeDetailsDTO {
        repeated UserGradeDetails UserGradeDetails = 1;
        double AverageGrade = 2;
}

message GetAllUserGradeRequest {
        string id = 1;
}

message GetAllUserGradeResponse {
        UserGradeDetailsDTO UserGradeDetailsDTO = 1;
}

message HostProminentRequest {
        string id = 1;
}

message HostProminentResponse {
        bool Prominent = 1;
}

message Notification {
        string id = 1;
        string UserId = 2;
        string Type = 3;
        string Message = 4;
        google.protobuf.Timestamp DateOfNotification = 5; 
        bool seen = 6;
}

message NotificationOn {
        string id = 1;
        string UserId = 2;
        string Type = 3;
        bool on = 4;
}

message UpdateNotificationOnRequest {
        string id = 1;
        string Type = 2;
        bool on = 3;
}

message UpdateNotificationOnResponse {
        string message = 1;
}

message CreateNotificationRequest {
        string UserId = 2;
        string Type = 3;
        string Message = 4;
        google.protobuf.Timestamp DateOfNotification = 5; 
}

message CreateNotificationResponse {
        string message = 1;
}

message GetAllNotificationsRequest {
        string id = 1;
}

message GetAllNotificationsResponse {
        repeated Notification Notifications = 1;
}

message GetUserNotificationsOnRequest {
        string id = 1;
}

message GetUserNotificationsOnResponse {
        repeated NotificationOn Notifications = 1;
}