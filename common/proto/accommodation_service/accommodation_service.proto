syntax = "proto3";

option go_package = "github.com/MarkoVasilic/Accommodation-booking-platform/common/proto/accommodation_service";

package accommodation_service;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service AccommodationService{
        rpc GetAllAccommodations(GetAllAccommodationsRequest) returns(GetAllAccommodationsResponse) {
                option (google.api.http) = {
                get: "/accommodation/accommodation"
            };
        }
        rpc CreateAccommodation(CreateAccommodationRequest) returns (CreateAccommodationResponse) {
                option (google.api.http) = {
                    post: "/accommodation/accommodation"
                    body: "*"
                };
        }
        rpc GetAccommodationByAvailability(GetAccommodationByAvailabilityRequest) returns(GetAccommodationByAvailabilityResponse) {
                option (google.api.http) = {
                get: "/accommodation/accommodation/availability/{id}"
            };
        }

        rpc GetAllAvailabilities(GetAllAvailabilitiesRequest) returns(GetAllAvailabilitiesResponse) {
                option (google.api.http) = {
                get: "/accommodation/availability/{id}"
            };
        }

        rpc GetAvailabilityById(GetAvailabilityByIdRequest) returns(GetAvailabilityByIdResponse) {
                option (google.api.http) = {
                get: "/accommodation/availability/one/{id}"
            };
        }
        rpc GetAccommodationById(GetAccommodationByIdRequest) returns(GetAccommodationByIdResponse) {
                option (google.api.http) = {
                get: "/accommodation/one/{id}"
            };
        }
        rpc CreateAvailability(CreateAvailabilityRequest) returns (CreateAvailabilityResponse) {
                option (google.api.http) = {
                    post: "/accommodation/availability"
                    body: "*"
                };
        }
        rpc UpdateAvailability(UpdateAvailabilityRequest) returns (UpdateAvailabilityResponse) {
                option (google.api.http) = {
                        put: "/accommodation/availability/{id}"
                        body: "*"
                };
        }
        rpc SearchAvailability(SearchAvailabilityRequest) returns (SearchAvailabilityResponse) {
                option (google.api.http) = {
                        post: "/accommodation/availability/search"
                        body: "*"
                };
        }
        rpc DeleteAccommodationsByHost(DeleteAccommodationsByHostRequest) returns (DeleteAccommodationsByHostResponse) {
                option (google.api.http) = {
                        delete: "/accommodation/availability/delete/host/id"
                };
        }
        rpc GetEveryAccommodation(GetEveryAccommodationRequest) returns(GetEveryAccommodationResponse) {
        	option (google.api.http) = {
			get: "/accommodation/accommodations"
		};
        }
        rpc CreateAccommodationGrade(CreateAccommodationGradeRequest) returns (CreateAccommodationGradeResponse) {
                option (google.api.http) = {
                    post: "/accommodation/accommodation/grade"
                    body: "*"
                };
        }

        rpc GetAllAccommodationGuestGrades(GetAllAccommodationGuestGradesRequest) returns(GetAllAccommodationGuestGradesResponse) {
        	option (google.api.http) = {
			get: "/accommodation/accommodation/guest/grades/{id}"
		};
        }
        rpc UpdateAccommodationGrade(UpdateAccommodationGradeRequest) returns (UpdateAccommodationGradeResponse) {
                option (google.api.http) = {
                        put: "/accommodation/accommodation/grade/{id}"
                        body: "*"
                };
        }
        rpc DeleteAccommodationGrade(DeleteAccommodationGradeRequest) returns (DeleteAccommodationGradeResponse) {
                option (google.api.http) = {
                        delete: "/accommodation/accommodation/grade/{id}"
                };
        }
        rpc GetAllAccommodationGrade(GetAllAccommodationGradeRequest) returns(GetAllAccommodationGradeResponse) {
        	option (google.api.http) = {
			get: "/accommodation/accommodation/grade/{id}"
		};
        }
        rpc FilterAvailability(FilterAvailabilityRequest) returns (FilterAvailabilityResponse) {
                option (google.api.http) = {
                        post: "/accommodation/availability/filter"
                        body: "*"
                };
        }
}

message Accommodation {
        string Id = 1;
        string HostId = 2;
        string Name = 3;
        string Location = 4;
        bool Wifi = 5;
        bool Kitchen = 6;
        bool AC = 7;
        bool ParkingLot = 8;
        int32 MinGuests = 9;
        int32 MaxGuests = 10;
        repeated string Images = 11;
        bool AutoAccept = 12;
}

message GetAllAccommodationsRequest {
        string id = 1;
}

message GetAllAccommodationsResponse {
        repeated Accommodation accommodations = 1;
}

message GetAccommodationByAvailabilityRequest {
        string id = 1;
}

message GetAccommodationByAvailabilityResponse {
        Accommodation accommodation = 1;
}

message CreateAccommodationRequest {
        string Id = 1;
        string HostId = 2;
        string Name = 3;
        string Location = 4;
        bool Wifi = 5;
        bool Kitchen = 6;
        bool AC = 7;
        bool ParkingLot = 8;
        int32 MinGuests = 9;
        int32 MaxGuests = 10;
        repeated string Images = 11;
        bool AutoAccept = 12;
}

message CreateAccommodationResponse {
        string message = 1;
}

message Availability {
        string Id = 1;
        string AccommodationID = 2;
        google.protobuf.Timestamp StartDate = 3;
        google.protobuf.Timestamp EndDate = 4;
        double Price = 5;
        bool IsPricePerGuest = 6;
}

message GetAvailabilityByIdRequest {
        string id = 1;
}

message GetAvailabilityByIdResponse {
        Availability availability = 1;
}

message GetAccommodationByIdRequest {
        string id = 1;
}

message GetAccommodationByIdResponse {
        Accommodation accommodation = 1;
}

message GetAllAvailabilitiesRequest {
        string id = 1;
}

message GetAllAvailabilitiesResponse {
        repeated Availability availabilities = 1;
}

message CreateAvailabilityRequest {
        string Id = 1;
        string AccommodationID = 2;
        google.protobuf.Timestamp StartDate = 3;
        google.protobuf.Timestamp EndDate = 4;
        double Price = 5;
        bool IsPricePerGuest = 6;
}

message CreateAvailabilityResponse {
        string message = 1;
}

message UpdateAvailabilityRequest {
        string id = 1;
        google.protobuf.Timestamp StartDate = 3;
        google.protobuf.Timestamp EndDate = 4;
        double Price = 5;
        bool IsPricePerGuest = 6;
}

message UpdateAvailabilityResponse {
        string message = 1;
}

message FindAvailability {
        string AccommodationId = 1;
        string AvailabilityID = 2;
        string HostId = 3;
        string Name = 4;
        string Location = 5;
        bool Wifi = 6;
        bool Kitchen = 7;
        bool AC = 8;
        bool ParkingLot = 9;
        repeated string Images = 10;
        google.protobuf.Timestamp StartDate = 11;
        google.protobuf.Timestamp EndDate = 12;
        double TotalPrice = 13;
        double SinglePrice = 14;
        bool IsPricePerGuest = 15;
}

message SearchAvailabilityRequest {
        string Location = 1;
        int32 GuestsNum = 2;
        google.protobuf.Timestamp StartDate = 3;
        google.protobuf.Timestamp EndDate = 4;
}

message SearchAvailabilityResponse {
        repeated FindAvailability FindAvailability = 1;
}

message DeleteAccommodationsByHostRequest {
        string id = 1;
}

message DeleteAccommodationsByHostResponse {
        string message = 1;
}

message GetEveryAccommodationRequest {
}

message GetEveryAccommodationResponse {
        repeated Accommodation Accommodations = 1;
}

message AccommodationGrade {
        string ID = 1;
        string GuestID = 2;
        string AccommodationID = 3;
        double Grade = 4;
        google.protobuf.Timestamp DateOfGrade = 5;
}

message AccommodationGradeDetails {
        string ID = 1;
        string GuestFirstName = 2;
        string GuestLastName = 3;
        string AccommodationName = 4;
        double Grade = 5;
        google.protobuf.Timestamp DateOfGrade = 6;
}

message CreateAccommodationGradeRequest {
        AccommodationGrade AccommodationGrade = 1;
}

message CreateAccommodationGradeResponse {
        string message = 1;
}

message GetAllAccommodationGuestGradesRequest {
       string id = 1;
}

message GetAllAccommodationGuestGradesResponse {
       repeated AccommodationGradeDetails AccommodationGradeDetails = 1;
}

message UpdateAccommodationGradeRequest {
        string id = 1;
        double Grade = 2;
 }
 
 message UpdateAccommodationGradeResponse {
        string message = 1;
 }

message DeleteAccommodationGradeRequest {
        string id = 1;
 }
 
 message DeleteAccommodationGradeResponse {
        string message = 1;
 }

message GetAllAccommodationGradeRequest {
        string id = 1;
 }
 
 message GetAllAccommodationGradeResponse {
        repeated AccommodationGradeDetails AccommodationGradeDetails = 1;
        double AverageGrade = 2;
 }

 message FilterAvailabilityRequest {
        string Location = 1;
        int32 GuestsNum = 2;
        google.protobuf.Timestamp StartDate = 3;
        google.protobuf.Timestamp EndDate = 4;
        int32 GradeMin = 5;
        int32 GradeMax = 6;
        bool Wifi = 7;
        bool Kitchen = 8;
        bool AC = 9;
        bool ParkingLot = 10;
        bool ProminentHost = 11;
}

message FilterAvailabilityResponse {
        repeated FindAvailability FindAvailability = 1;
}