// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: accommodation_service/accommodation_service.proto

package accommodation_service

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Accommodation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	HostId     string   `protobuf:"bytes,2,opt,name=HostId,proto3" json:"HostId,omitempty"`
	Name       string   `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Location   string   `protobuf:"bytes,4,opt,name=Location,proto3" json:"Location,omitempty"`
	Wifi       bool     `protobuf:"varint,5,opt,name=Wifi,proto3" json:"Wifi,omitempty"`
	Kitchen    bool     `protobuf:"varint,6,opt,name=Kitchen,proto3" json:"Kitchen,omitempty"`
	AC         bool     `protobuf:"varint,7,opt,name=AC,proto3" json:"AC,omitempty"`
	ParkingLot bool     `protobuf:"varint,8,opt,name=ParkingLot,proto3" json:"ParkingLot,omitempty"`
	MinGuests  int32    `protobuf:"varint,9,opt,name=MinGuests,proto3" json:"MinGuests,omitempty"`
	MaxGuests  int32    `protobuf:"varint,10,opt,name=MaxGuests,proto3" json:"MaxGuests,omitempty"`
	Images     []string `protobuf:"bytes,11,rep,name=Images,proto3" json:"Images,omitempty"`
	AutoAccept bool     `protobuf:"varint,12,opt,name=AutoAccept,proto3" json:"AutoAccept,omitempty"`
}

func (x *Accommodation) Reset() {
	*x = Accommodation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Accommodation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Accommodation) ProtoMessage() {}

func (x *Accommodation) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Accommodation.ProtoReflect.Descriptor instead.
func (*Accommodation) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{0}
}

func (x *Accommodation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Accommodation) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *Accommodation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Accommodation) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Accommodation) GetWifi() bool {
	if x != nil {
		return x.Wifi
	}
	return false
}

func (x *Accommodation) GetKitchen() bool {
	if x != nil {
		return x.Kitchen
	}
	return false
}

func (x *Accommodation) GetAC() bool {
	if x != nil {
		return x.AC
	}
	return false
}

func (x *Accommodation) GetParkingLot() bool {
	if x != nil {
		return x.ParkingLot
	}
	return false
}

func (x *Accommodation) GetMinGuests() int32 {
	if x != nil {
		return x.MinGuests
	}
	return 0
}

func (x *Accommodation) GetMaxGuests() int32 {
	if x != nil {
		return x.MaxGuests
	}
	return 0
}

func (x *Accommodation) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Accommodation) GetAutoAccept() bool {
	if x != nil {
		return x.AutoAccept
	}
	return false
}

type GetAllAccommodationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAllAccommodationsRequest) Reset() {
	*x = GetAllAccommodationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAccommodationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAccommodationsRequest) ProtoMessage() {}

func (x *GetAllAccommodationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAccommodationsRequest.ProtoReflect.Descriptor instead.
func (*GetAllAccommodationsRequest) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetAllAccommodationsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAllAccommodationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accommodations []*Accommodation `protobuf:"bytes,1,rep,name=accommodations,proto3" json:"accommodations,omitempty"`
}

func (x *GetAllAccommodationsResponse) Reset() {
	*x = GetAllAccommodationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAccommodationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAccommodationsResponse) ProtoMessage() {}

func (x *GetAllAccommodationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAccommodationsResponse.ProtoReflect.Descriptor instead.
func (*GetAllAccommodationsResponse) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetAllAccommodationsResponse) GetAccommodations() []*Accommodation {
	if x != nil {
		return x.Accommodations
	}
	return nil
}

type GetAccommodationByAvailabilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAccommodationByAvailabilityRequest) Reset() {
	*x = GetAccommodationByAvailabilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccommodationByAvailabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccommodationByAvailabilityRequest) ProtoMessage() {}

func (x *GetAccommodationByAvailabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccommodationByAvailabilityRequest.ProtoReflect.Descriptor instead.
func (*GetAccommodationByAvailabilityRequest) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetAccommodationByAvailabilityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAccommodationByAvailabilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accommodation *Accommodation `protobuf:"bytes,1,opt,name=accommodation,proto3" json:"accommodation,omitempty"`
}

func (x *GetAccommodationByAvailabilityResponse) Reset() {
	*x = GetAccommodationByAvailabilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccommodationByAvailabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccommodationByAvailabilityResponse) ProtoMessage() {}

func (x *GetAccommodationByAvailabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccommodationByAvailabilityResponse.ProtoReflect.Descriptor instead.
func (*GetAccommodationByAvailabilityResponse) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetAccommodationByAvailabilityResponse) GetAccommodation() *Accommodation {
	if x != nil {
		return x.Accommodation
	}
	return nil
}

type CreateAccommodationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	HostId     string   `protobuf:"bytes,2,opt,name=HostId,proto3" json:"HostId,omitempty"`
	Name       string   `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Location   string   `protobuf:"bytes,4,opt,name=Location,proto3" json:"Location,omitempty"`
	Wifi       bool     `protobuf:"varint,5,opt,name=Wifi,proto3" json:"Wifi,omitempty"`
	Kitchen    bool     `protobuf:"varint,6,opt,name=Kitchen,proto3" json:"Kitchen,omitempty"`
	AC         bool     `protobuf:"varint,7,opt,name=AC,proto3" json:"AC,omitempty"`
	ParkingLot bool     `protobuf:"varint,8,opt,name=ParkingLot,proto3" json:"ParkingLot,omitempty"`
	MinGuests  int32    `protobuf:"varint,9,opt,name=MinGuests,proto3" json:"MinGuests,omitempty"`
	MaxGuests  int32    `protobuf:"varint,10,opt,name=MaxGuests,proto3" json:"MaxGuests,omitempty"`
	Images     []string `protobuf:"bytes,11,rep,name=Images,proto3" json:"Images,omitempty"`
	AutoAccept bool     `protobuf:"varint,12,opt,name=AutoAccept,proto3" json:"AutoAccept,omitempty"`
}

func (x *CreateAccommodationRequest) Reset() {
	*x = CreateAccommodationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccommodationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccommodationRequest) ProtoMessage() {}

func (x *CreateAccommodationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccommodationRequest.ProtoReflect.Descriptor instead.
func (*CreateAccommodationRequest) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateAccommodationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateAccommodationRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *CreateAccommodationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAccommodationRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *CreateAccommodationRequest) GetWifi() bool {
	if x != nil {
		return x.Wifi
	}
	return false
}

func (x *CreateAccommodationRequest) GetKitchen() bool {
	if x != nil {
		return x.Kitchen
	}
	return false
}

func (x *CreateAccommodationRequest) GetAC() bool {
	if x != nil {
		return x.AC
	}
	return false
}

func (x *CreateAccommodationRequest) GetParkingLot() bool {
	if x != nil {
		return x.ParkingLot
	}
	return false
}

func (x *CreateAccommodationRequest) GetMinGuests() int32 {
	if x != nil {
		return x.MinGuests
	}
	return 0
}

func (x *CreateAccommodationRequest) GetMaxGuests() int32 {
	if x != nil {
		return x.MaxGuests
	}
	return 0
}

func (x *CreateAccommodationRequest) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *CreateAccommodationRequest) GetAutoAccept() bool {
	if x != nil {
		return x.AutoAccept
	}
	return false
}

type CreateAccommodationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateAccommodationResponse) Reset() {
	*x = CreateAccommodationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccommodationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccommodationResponse) ProtoMessage() {}

func (x *CreateAccommodationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccommodationResponse.ProtoReflect.Descriptor instead.
func (*CreateAccommodationResponse) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{6}
}

func (x *CreateAccommodationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Availability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	AccommodationID string                 `protobuf:"bytes,2,opt,name=AccommodationID,proto3" json:"AccommodationID,omitempty"`
	StartDate       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=StartDate,proto3" json:"StartDate,omitempty"`
	EndDate         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=EndDate,proto3" json:"EndDate,omitempty"`
	Price           float64                `protobuf:"fixed64,5,opt,name=Price,proto3" json:"Price,omitempty"`
	IsPricePerGuest bool                   `protobuf:"varint,6,opt,name=IsPricePerGuest,proto3" json:"IsPricePerGuest,omitempty"`
}

func (x *Availability) Reset() {
	*x = Availability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Availability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Availability) ProtoMessage() {}

func (x *Availability) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Availability.ProtoReflect.Descriptor instead.
func (*Availability) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{7}
}

func (x *Availability) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Availability) GetAccommodationID() string {
	if x != nil {
		return x.AccommodationID
	}
	return ""
}

func (x *Availability) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Availability) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *Availability) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Availability) GetIsPricePerGuest() bool {
	if x != nil {
		return x.IsPricePerGuest
	}
	return false
}

type GetAvailabilityByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAvailabilityByIdRequest) Reset() {
	*x = GetAvailabilityByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailabilityByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailabilityByIdRequest) ProtoMessage() {}

func (x *GetAvailabilityByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailabilityByIdRequest.ProtoReflect.Descriptor instead.
func (*GetAvailabilityByIdRequest) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetAvailabilityByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAvailabilityByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accommodation *Accommodation `protobuf:"bytes,1,opt,name=accommodation,proto3" json:"accommodation,omitempty"`
}

func (x *GetAvailabilityByIdResponse) Reset() {
	*x = GetAvailabilityByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailabilityByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailabilityByIdResponse) ProtoMessage() {}

func (x *GetAvailabilityByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailabilityByIdResponse.ProtoReflect.Descriptor instead.
func (*GetAvailabilityByIdResponse) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetAvailabilityByIdResponse) GetAccommodation() *Accommodation {
	if x != nil {
		return x.Accommodation
	}
	return nil
}

type GetAccommodationByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAccommodationByIdRequest) Reset() {
	*x = GetAccommodationByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccommodationByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccommodationByIdRequest) ProtoMessage() {}

func (x *GetAccommodationByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccommodationByIdRequest.ProtoReflect.Descriptor instead.
func (*GetAccommodationByIdRequest) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetAccommodationByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAccommodationByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Availability *Availability `protobuf:"bytes,1,opt,name=availability,proto3" json:"availability,omitempty"`
}

func (x *GetAccommodationByIdResponse) Reset() {
	*x = GetAccommodationByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccommodationByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccommodationByIdResponse) ProtoMessage() {}

func (x *GetAccommodationByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccommodationByIdResponse.ProtoReflect.Descriptor instead.
func (*GetAccommodationByIdResponse) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetAccommodationByIdResponse) GetAvailability() *Availability {
	if x != nil {
		return x.Availability
	}
	return nil
}

type GetAllAvailabilitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAllAvailabilitiesRequest) Reset() {
	*x = GetAllAvailabilitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAvailabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAvailabilitiesRequest) ProtoMessage() {}

func (x *GetAllAvailabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAvailabilitiesRequest.ProtoReflect.Descriptor instead.
func (*GetAllAvailabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetAllAvailabilitiesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAllAvailabilitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Availabilities []*Availability `protobuf:"bytes,1,rep,name=availabilities,proto3" json:"availabilities,omitempty"`
}

func (x *GetAllAvailabilitiesResponse) Reset() {
	*x = GetAllAvailabilitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAvailabilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAvailabilitiesResponse) ProtoMessage() {}

func (x *GetAllAvailabilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAvailabilitiesResponse.ProtoReflect.Descriptor instead.
func (*GetAllAvailabilitiesResponse) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetAllAvailabilitiesResponse) GetAvailabilities() []*Availability {
	if x != nil {
		return x.Availabilities
	}
	return nil
}

type CreateAvailabilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	AccommodationID string                 `protobuf:"bytes,2,opt,name=AccommodationID,proto3" json:"AccommodationID,omitempty"`
	StartDate       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=StartDate,proto3" json:"StartDate,omitempty"`
	EndDate         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=EndDate,proto3" json:"EndDate,omitempty"`
	Price           float64                `protobuf:"fixed64,5,opt,name=Price,proto3" json:"Price,omitempty"`
	IsPricePerGuest bool                   `protobuf:"varint,6,opt,name=IsPricePerGuest,proto3" json:"IsPricePerGuest,omitempty"`
}

func (x *CreateAvailabilityRequest) Reset() {
	*x = CreateAvailabilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAvailabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAvailabilityRequest) ProtoMessage() {}

func (x *CreateAvailabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAvailabilityRequest.ProtoReflect.Descriptor instead.
func (*CreateAvailabilityRequest) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{14}
}

func (x *CreateAvailabilityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateAvailabilityRequest) GetAccommodationID() string {
	if x != nil {
		return x.AccommodationID
	}
	return ""
}

func (x *CreateAvailabilityRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *CreateAvailabilityRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *CreateAvailabilityRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateAvailabilityRequest) GetIsPricePerGuest() bool {
	if x != nil {
		return x.IsPricePerGuest
	}
	return false
}

type CreateAvailabilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateAvailabilityResponse) Reset() {
	*x = CreateAvailabilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAvailabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAvailabilityResponse) ProtoMessage() {}

func (x *CreateAvailabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAvailabilityResponse.ProtoReflect.Descriptor instead.
func (*CreateAvailabilityResponse) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{15}
}

func (x *CreateAvailabilityResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateAvailabilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StartDate       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=StartDate,proto3" json:"StartDate,omitempty"`
	EndDate         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=EndDate,proto3" json:"EndDate,omitempty"`
	Price           float64                `protobuf:"fixed64,5,opt,name=Price,proto3" json:"Price,omitempty"`
	IsPricePerGuest bool                   `protobuf:"varint,6,opt,name=IsPricePerGuest,proto3" json:"IsPricePerGuest,omitempty"`
}

func (x *UpdateAvailabilityRequest) Reset() {
	*x = UpdateAvailabilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAvailabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAvailabilityRequest) ProtoMessage() {}

func (x *UpdateAvailabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAvailabilityRequest.ProtoReflect.Descriptor instead.
func (*UpdateAvailabilityRequest) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateAvailabilityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAvailabilityRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *UpdateAvailabilityRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *UpdateAvailabilityRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UpdateAvailabilityRequest) GetIsPricePerGuest() bool {
	if x != nil {
		return x.IsPricePerGuest
	}
	return false
}

type UpdateAvailabilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateAvailabilityResponse) Reset() {
	*x = UpdateAvailabilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAvailabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAvailabilityResponse) ProtoMessage() {}

func (x *UpdateAvailabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAvailabilityResponse.ProtoReflect.Descriptor instead.
func (*UpdateAvailabilityResponse) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateAvailabilityResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FindAvailability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccommodationId string                 `protobuf:"bytes,1,opt,name=AccommodationId,proto3" json:"AccommodationId,omitempty"`
	AvailabilityID  string                 `protobuf:"bytes,2,opt,name=AvailabilityID,proto3" json:"AvailabilityID,omitempty"`
	HostId          string                 `protobuf:"bytes,3,opt,name=HostId,proto3" json:"HostId,omitempty"`
	Name            string                 `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	Location        string                 `protobuf:"bytes,5,opt,name=Location,proto3" json:"Location,omitempty"`
	Wifi            bool                   `protobuf:"varint,6,opt,name=Wifi,proto3" json:"Wifi,omitempty"`
	Kitchen         bool                   `protobuf:"varint,7,opt,name=Kitchen,proto3" json:"Kitchen,omitempty"`
	AC              bool                   `protobuf:"varint,8,opt,name=AC,proto3" json:"AC,omitempty"`
	ParkingLot      bool                   `protobuf:"varint,9,opt,name=ParkingLot,proto3" json:"ParkingLot,omitempty"`
	Images          []string               `protobuf:"bytes,10,rep,name=Images,proto3" json:"Images,omitempty"`
	StartDate       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=StartDate,proto3" json:"StartDate,omitempty"`
	EndDate         *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=EndDate,proto3" json:"EndDate,omitempty"`
	TotalPrice      float64                `protobuf:"fixed64,13,opt,name=TotalPrice,proto3" json:"TotalPrice,omitempty"`
	SinglePrice     float64                `protobuf:"fixed64,14,opt,name=SinglePrice,proto3" json:"SinglePrice,omitempty"`
	IsPricePerGuest bool                   `protobuf:"varint,15,opt,name=IsPricePerGuest,proto3" json:"IsPricePerGuest,omitempty"`
}

func (x *FindAvailability) Reset() {
	*x = FindAvailability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAvailability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAvailability) ProtoMessage() {}

func (x *FindAvailability) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAvailability.ProtoReflect.Descriptor instead.
func (*FindAvailability) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{18}
}

func (x *FindAvailability) GetAccommodationId() string {
	if x != nil {
		return x.AccommodationId
	}
	return ""
}

func (x *FindAvailability) GetAvailabilityID() string {
	if x != nil {
		return x.AvailabilityID
	}
	return ""
}

func (x *FindAvailability) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *FindAvailability) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FindAvailability) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *FindAvailability) GetWifi() bool {
	if x != nil {
		return x.Wifi
	}
	return false
}

func (x *FindAvailability) GetKitchen() bool {
	if x != nil {
		return x.Kitchen
	}
	return false
}

func (x *FindAvailability) GetAC() bool {
	if x != nil {
		return x.AC
	}
	return false
}

func (x *FindAvailability) GetParkingLot() bool {
	if x != nil {
		return x.ParkingLot
	}
	return false
}

func (x *FindAvailability) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *FindAvailability) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *FindAvailability) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *FindAvailability) GetTotalPrice() float64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *FindAvailability) GetSinglePrice() float64 {
	if x != nil {
		return x.SinglePrice
	}
	return 0
}

func (x *FindAvailability) GetIsPricePerGuest() bool {
	if x != nil {
		return x.IsPricePerGuest
	}
	return false
}

type SearchAvailabilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location  string                 `protobuf:"bytes,1,opt,name=Location,proto3" json:"Location,omitempty"`
	GuestsNum int32                  `protobuf:"varint,2,opt,name=GuestsNum,proto3" json:"GuestsNum,omitempty"`
	StartDate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=StartDate,proto3" json:"StartDate,omitempty"`
	EndDate   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=EndDate,proto3" json:"EndDate,omitempty"`
}

func (x *SearchAvailabilityRequest) Reset() {
	*x = SearchAvailabilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAvailabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAvailabilityRequest) ProtoMessage() {}

func (x *SearchAvailabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAvailabilityRequest.ProtoReflect.Descriptor instead.
func (*SearchAvailabilityRequest) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{19}
}

func (x *SearchAvailabilityRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *SearchAvailabilityRequest) GetGuestsNum() int32 {
	if x != nil {
		return x.GuestsNum
	}
	return 0
}

func (x *SearchAvailabilityRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *SearchAvailabilityRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type SearchAvailabilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FindAvailability []*FindAvailability `protobuf:"bytes,1,rep,name=FindAvailability,proto3" json:"FindAvailability,omitempty"`
}

func (x *SearchAvailabilityResponse) Reset() {
	*x = SearchAvailabilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAvailabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAvailabilityResponse) ProtoMessage() {}

func (x *SearchAvailabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAvailabilityResponse.ProtoReflect.Descriptor instead.
func (*SearchAvailabilityResponse) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{20}
}

func (x *SearchAvailabilityResponse) GetFindAvailability() []*FindAvailability {
	if x != nil {
		return x.FindAvailability
	}
	return nil
}

type DeleteAccommodationsByHostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAccommodationsByHostRequest) Reset() {
	*x = DeleteAccommodationsByHostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccommodationsByHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccommodationsByHostRequest) ProtoMessage() {}

func (x *DeleteAccommodationsByHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccommodationsByHostRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccommodationsByHostRequest) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteAccommodationsByHostRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteAccommodationsByHostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteAccommodationsByHostResponse) Reset() {
	*x = DeleteAccommodationsByHostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccommodationsByHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccommodationsByHostResponse) ProtoMessage() {}

func (x *DeleteAccommodationsByHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccommodationsByHostResponse.ProtoReflect.Descriptor instead.
func (*DeleteAccommodationsByHostResponse) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteAccommodationsByHostResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetEveryAccommodationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetEveryAccommodationRequest) Reset() {
	*x = GetEveryAccommodationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEveryAccommodationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEveryAccommodationRequest) ProtoMessage() {}

func (x *GetEveryAccommodationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEveryAccommodationRequest.ProtoReflect.Descriptor instead.
func (*GetEveryAccommodationRequest) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{23}
}

type GetEveryAccommodationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accommodations []*Accommodation `protobuf:"bytes,1,rep,name=Accommodations,proto3" json:"Accommodations,omitempty"`
}

func (x *GetEveryAccommodationResponse) Reset() {
	*x = GetEveryAccommodationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEveryAccommodationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEveryAccommodationResponse) ProtoMessage() {}

func (x *GetEveryAccommodationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEveryAccommodationResponse.ProtoReflect.Descriptor instead.
func (*GetEveryAccommodationResponse) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetEveryAccommodationResponse) GetAccommodations() []*Accommodation {
	if x != nil {
		return x.Accommodations
	}
	return nil
}

type AccommodationGrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	GuestID         string                 `protobuf:"bytes,2,opt,name=GuestID,proto3" json:"GuestID,omitempty"`
	AccommodationID string                 `protobuf:"bytes,3,opt,name=AccommodationID,proto3" json:"AccommodationID,omitempty"`
	Grade           float64                `protobuf:"fixed64,4,opt,name=Grade,proto3" json:"Grade,omitempty"`
	DateOfGrade     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=DateOfGrade,proto3" json:"DateOfGrade,omitempty"`
}

func (x *AccommodationGrade) Reset() {
	*x = AccommodationGrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccommodationGrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccommodationGrade) ProtoMessage() {}

func (x *AccommodationGrade) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccommodationGrade.ProtoReflect.Descriptor instead.
func (*AccommodationGrade) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{25}
}

func (x *AccommodationGrade) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *AccommodationGrade) GetGuestID() string {
	if x != nil {
		return x.GuestID
	}
	return ""
}

func (x *AccommodationGrade) GetAccommodationID() string {
	if x != nil {
		return x.AccommodationID
	}
	return ""
}

func (x *AccommodationGrade) GetGrade() float64 {
	if x != nil {
		return x.Grade
	}
	return 0
}

func (x *AccommodationGrade) GetDateOfGrade() *timestamppb.Timestamp {
	if x != nil {
		return x.DateOfGrade
	}
	return nil
}

type AccommodationGradeDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	GuestFirstName    string                 `protobuf:"bytes,2,opt,name=GuestFirstName,proto3" json:"GuestFirstName,omitempty"`
	GuestLastName     string                 `protobuf:"bytes,3,opt,name=GuestLastName,proto3" json:"GuestLastName,omitempty"`
	AccommodationName string                 `protobuf:"bytes,4,opt,name=AccommodationName,proto3" json:"AccommodationName,omitempty"`
	Grade             float64                `protobuf:"fixed64,5,opt,name=Grade,proto3" json:"Grade,omitempty"`
	DateOfGrade       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=DateOfGrade,proto3" json:"DateOfGrade,omitempty"`
}

func (x *AccommodationGradeDetails) Reset() {
	*x = AccommodationGradeDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccommodationGradeDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccommodationGradeDetails) ProtoMessage() {}

func (x *AccommodationGradeDetails) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccommodationGradeDetails.ProtoReflect.Descriptor instead.
func (*AccommodationGradeDetails) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{26}
}

func (x *AccommodationGradeDetails) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *AccommodationGradeDetails) GetGuestFirstName() string {
	if x != nil {
		return x.GuestFirstName
	}
	return ""
}

func (x *AccommodationGradeDetails) GetGuestLastName() string {
	if x != nil {
		return x.GuestLastName
	}
	return ""
}

func (x *AccommodationGradeDetails) GetAccommodationName() string {
	if x != nil {
		return x.AccommodationName
	}
	return ""
}

func (x *AccommodationGradeDetails) GetGrade() float64 {
	if x != nil {
		return x.Grade
	}
	return 0
}

func (x *AccommodationGradeDetails) GetDateOfGrade() *timestamppb.Timestamp {
	if x != nil {
		return x.DateOfGrade
	}
	return nil
}

type CreateAccommodationGradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccommodationGrade *AccommodationGrade `protobuf:"bytes,1,opt,name=AccommodationGrade,proto3" json:"AccommodationGrade,omitempty"`
}

func (x *CreateAccommodationGradeRequest) Reset() {
	*x = CreateAccommodationGradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccommodationGradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccommodationGradeRequest) ProtoMessage() {}

func (x *CreateAccommodationGradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccommodationGradeRequest.ProtoReflect.Descriptor instead.
func (*CreateAccommodationGradeRequest) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{27}
}

func (x *CreateAccommodationGradeRequest) GetAccommodationGrade() *AccommodationGrade {
	if x != nil {
		return x.AccommodationGrade
	}
	return nil
}

type CreateAccommodationGradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateAccommodationGradeResponse) Reset() {
	*x = CreateAccommodationGradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccommodationGradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccommodationGradeResponse) ProtoMessage() {}

func (x *CreateAccommodationGradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccommodationGradeResponse.ProtoReflect.Descriptor instead.
func (*CreateAccommodationGradeResponse) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{28}
}

func (x *CreateAccommodationGradeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetAllAccommodationGuestGradesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAllAccommodationGuestGradesRequest) Reset() {
	*x = GetAllAccommodationGuestGradesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAccommodationGuestGradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAccommodationGuestGradesRequest) ProtoMessage() {}

func (x *GetAllAccommodationGuestGradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAccommodationGuestGradesRequest.ProtoReflect.Descriptor instead.
func (*GetAllAccommodationGuestGradesRequest) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{29}
}

func (x *GetAllAccommodationGuestGradesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAllAccommodationGuestGradesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccommodationGradeDetails []*AccommodationGradeDetails `protobuf:"bytes,1,rep,name=AccommodationGradeDetails,proto3" json:"AccommodationGradeDetails,omitempty"`
}

func (x *GetAllAccommodationGuestGradesResponse) Reset() {
	*x = GetAllAccommodationGuestGradesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAccommodationGuestGradesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAccommodationGuestGradesResponse) ProtoMessage() {}

func (x *GetAllAccommodationGuestGradesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAccommodationGuestGradesResponse.ProtoReflect.Descriptor instead.
func (*GetAllAccommodationGuestGradesResponse) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{30}
}

func (x *GetAllAccommodationGuestGradesResponse) GetAccommodationGradeDetails() []*AccommodationGradeDetails {
	if x != nil {
		return x.AccommodationGradeDetails
	}
	return nil
}

type UpdateAccommodationGradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Grade float64 `protobuf:"fixed64,2,opt,name=Grade,proto3" json:"Grade,omitempty"`
}

func (x *UpdateAccommodationGradeRequest) Reset() {
	*x = UpdateAccommodationGradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccommodationGradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccommodationGradeRequest) ProtoMessage() {}

func (x *UpdateAccommodationGradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccommodationGradeRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccommodationGradeRequest) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateAccommodationGradeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAccommodationGradeRequest) GetGrade() float64 {
	if x != nil {
		return x.Grade
	}
	return 0
}

type UpdateAccommodationGradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateAccommodationGradeResponse) Reset() {
	*x = UpdateAccommodationGradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccommodationGradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccommodationGradeResponse) ProtoMessage() {}

func (x *UpdateAccommodationGradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccommodationGradeResponse.ProtoReflect.Descriptor instead.
func (*UpdateAccommodationGradeResponse) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateAccommodationGradeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteAccommodationGradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAccommodationGradeRequest) Reset() {
	*x = DeleteAccommodationGradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccommodationGradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccommodationGradeRequest) ProtoMessage() {}

func (x *DeleteAccommodationGradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccommodationGradeRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccommodationGradeRequest) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteAccommodationGradeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteAccommodationGradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteAccommodationGradeResponse) Reset() {
	*x = DeleteAccommodationGradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccommodationGradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccommodationGradeResponse) ProtoMessage() {}

func (x *DeleteAccommodationGradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccommodationGradeResponse.ProtoReflect.Descriptor instead.
func (*DeleteAccommodationGradeResponse) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{34}
}

func (x *DeleteAccommodationGradeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetAllAccommodationGradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAllAccommodationGradeRequest) Reset() {
	*x = GetAllAccommodationGradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAccommodationGradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAccommodationGradeRequest) ProtoMessage() {}

func (x *GetAllAccommodationGradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAccommodationGradeRequest.ProtoReflect.Descriptor instead.
func (*GetAllAccommodationGradeRequest) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{35}
}

func (x *GetAllAccommodationGradeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAllAccommodationGradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccommodationGradeDetails []*AccommodationGradeDetails `protobuf:"bytes,1,rep,name=AccommodationGradeDetails,proto3" json:"AccommodationGradeDetails,omitempty"`
	AverageGrade              float64                      `protobuf:"fixed64,2,opt,name=AverageGrade,proto3" json:"AverageGrade,omitempty"`
}

func (x *GetAllAccommodationGradeResponse) Reset() {
	*x = GetAllAccommodationGradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAccommodationGradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAccommodationGradeResponse) ProtoMessage() {}

func (x *GetAllAccommodationGradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAccommodationGradeResponse.ProtoReflect.Descriptor instead.
func (*GetAllAccommodationGradeResponse) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{36}
}

func (x *GetAllAccommodationGradeResponse) GetAccommodationGradeDetails() []*AccommodationGradeDetails {
	if x != nil {
		return x.AccommodationGradeDetails
	}
	return nil
}

func (x *GetAllAccommodationGradeResponse) GetAverageGrade() float64 {
	if x != nil {
		return x.AverageGrade
	}
	return 0
}

type FilterAvailabilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location      string                 `protobuf:"bytes,1,opt,name=Location,proto3" json:"Location,omitempty"`
	GuestsNum     int32                  `protobuf:"varint,2,opt,name=GuestsNum,proto3" json:"GuestsNum,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=StartDate,proto3" json:"StartDate,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=EndDate,proto3" json:"EndDate,omitempty"`
	GradeMin      int32                  `protobuf:"varint,5,opt,name=GradeMin,proto3" json:"GradeMin,omitempty"`
	GradeMax      int32                  `protobuf:"varint,6,opt,name=GradeMax,proto3" json:"GradeMax,omitempty"`
	Wifi          bool                   `protobuf:"varint,7,opt,name=Wifi,proto3" json:"Wifi,omitempty"`
	Kitchen       bool                   `protobuf:"varint,8,opt,name=Kitchen,proto3" json:"Kitchen,omitempty"`
	AC            bool                   `protobuf:"varint,9,opt,name=AC,proto3" json:"AC,omitempty"`
	ParkingLot    bool                   `protobuf:"varint,10,opt,name=ParkingLot,proto3" json:"ParkingLot,omitempty"`
	ProminentHost bool                   `protobuf:"varint,11,opt,name=ProminentHost,proto3" json:"ProminentHost,omitempty"`
}

func (x *FilterAvailabilityRequest) Reset() {
	*x = FilterAvailabilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterAvailabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterAvailabilityRequest) ProtoMessage() {}

func (x *FilterAvailabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterAvailabilityRequest.ProtoReflect.Descriptor instead.
func (*FilterAvailabilityRequest) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{37}
}

func (x *FilterAvailabilityRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *FilterAvailabilityRequest) GetGuestsNum() int32 {
	if x != nil {
		return x.GuestsNum
	}
	return 0
}

func (x *FilterAvailabilityRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *FilterAvailabilityRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *FilterAvailabilityRequest) GetGradeMin() int32 {
	if x != nil {
		return x.GradeMin
	}
	return 0
}

func (x *FilterAvailabilityRequest) GetGradeMax() int32 {
	if x != nil {
		return x.GradeMax
	}
	return 0
}

func (x *FilterAvailabilityRequest) GetWifi() bool {
	if x != nil {
		return x.Wifi
	}
	return false
}

func (x *FilterAvailabilityRequest) GetKitchen() bool {
	if x != nil {
		return x.Kitchen
	}
	return false
}

func (x *FilterAvailabilityRequest) GetAC() bool {
	if x != nil {
		return x.AC
	}
	return false
}

func (x *FilterAvailabilityRequest) GetParkingLot() bool {
	if x != nil {
		return x.ParkingLot
	}
	return false
}

func (x *FilterAvailabilityRequest) GetProminentHost() bool {
	if x != nil {
		return x.ProminentHost
	}
	return false
}

type FilterAvailabilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FindAvailability []*FindAvailability `protobuf:"bytes,1,rep,name=FindAvailability,proto3" json:"FindAvailability,omitempty"`
}

func (x *FilterAvailabilityResponse) Reset() {
	*x = FilterAvailabilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_service_accommodation_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterAvailabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterAvailabilityResponse) ProtoMessage() {}

func (x *FilterAvailabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_service_accommodation_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterAvailabilityResponse.ProtoReflect.Descriptor instead.
func (*FilterAvailabilityResponse) Descriptor() ([]byte, []int) {
	return file_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{38}
}

func (x *FilterAvailabilityResponse) GetFindAvailability() []*FindAvailability {
	if x != nil {
		return x.FindAvailability
	}
	return nil
}

var File_accommodation_service_accommodation_service_proto protoreflect.FileDescriptor

var file_accommodation_service_accommodation_service_proto_rawDesc = []byte{
	0x0a, 0x31, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x15, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x02, 0x0a, 0x0d, 0x41, 0x63,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x48,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x48, 0x6f, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x57, 0x69, 0x66, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x57, 0x69, 0x66, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x4b, 0x69, 0x74, 0x63, 0x68,
	0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x41, 0x43, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x41,
	0x43, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x6f,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x69, 0x6e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4d, 0x69, 0x6e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x4d, 0x61, 0x78, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x41, 0x75, 0x74, 0x6f, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x22, 0x2d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x6c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x37, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x74, 0x0a, 0x26, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xc6, 0x02, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x57, 0x69, 0x66, 0x69,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x57, 0x69, 0x66, 0x69, 0x12, 0x18, 0x0a, 0x07,
	0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x4b,
	0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x41, 0x43, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x41, 0x43, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x4c, 0x6f, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x50, 0x61, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x69, 0x6e, 0x47, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4d, 0x69, 0x6e, 0x47, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x47, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4d, 0x61, 0x78, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x75,
	0x74, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x41, 0x75, 0x74, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x22, 0x37, 0x0a, 0x1b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xf8, 0x01, 0x0a, 0x0c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x38,
	0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50,
	0x65, 0x72, 0x47, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x49,
	0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x47, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2c,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x61,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x67, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x52, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22,
	0x2d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6b,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b,
	0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0e, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x85, 0x02, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a,
	0x07, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x47, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x49, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x47, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x19,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x49, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x47, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x49, 0x73, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x50, 0x65, 0x72, 0x47, 0x75, 0x65, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x1a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0xfe, 0x03, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x57, 0x69, 0x66, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x57, 0x69, 0x66, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x41, 0x43, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x41, 0x43, 0x12, 0x1e,
	0x0a, 0x0a, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x34, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x45,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x47, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x49, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x47, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xc5, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x38, 0x0a, 0x09, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x71, 0x0a, 0x1a, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x10, 0x46, 0x69, 0x6e,
	0x64, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x33, 0x0a,
	0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x3e, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x72, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x6d, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x72, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0xbc, 0x01, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x47, 0x72, 0x61, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x22, 0xfb, 0x01, 0x0a, 0x19, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x26,
	0x0a, 0x0e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x3c, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x47, 0x72, 0x61, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x47, 0x72, 0x61, 0x64, 0x65, 0x22, 0x7c,
	0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x59, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x12, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x22, 0x3c, 0x0a, 0x20,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x37, 0x0a, 0x25, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x75, 0x65, 0x73, 0x74,
	0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e,
	0x0a, 0x19, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x19, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x47,
	0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x72, 0x61, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x47, 0x72, 0x61, 0x64, 0x65, 0x22, 0x3c, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x31, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3c, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x31, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb6, 0x01, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e,
	0x0a, 0x19, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x19, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x22, 0x81, 0x03, 0x0a, 0x19, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x38, 0x0a, 0x09, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x4d, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x72, 0x61, 0x64, 0x65, 0x4d,
	0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x47, 0x72, 0x61, 0x64, 0x65, 0x4d,
	0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x57, 0x69, 0x66, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x57, 0x69, 0x66, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x41, 0x43, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x41, 0x43,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x48, 0x6f, 0x73,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x6e, 0x65,
	0x6e, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x22, 0x71, 0x0a, 0x1a, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x32, 0xa6, 0x18, 0x0a, 0x14, 0x41, 0x63,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0xa5, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x61,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xa5, 0x01, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0xd5, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x3c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x12, 0x2e, 0x2f, 0x61, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xa9, 0x01, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x32, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xaa, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x12, 0x31,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f,
	0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x6f, 0x6e, 0x65, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0xa0, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x32, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x33, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f,
	0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x6e,
	0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xa1, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x30, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f,
	0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0xa6, 0x01, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x30, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01,
	0x2a, 0x1a, 0x20, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0xa8, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x30, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x61, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0xc5,
	0x01, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x38, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x2a, 0x2a, 0x2f, 0x61, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x68,
	0x6f, 0x73, 0x74, 0x2f, 0x69, 0x64, 0x12, 0xa9, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x33, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x72,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x76, 0x65, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0xba, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12,
	0x36, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x61, 0x63,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12,
	0xd5, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x73, 0x12, 0x3c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x75,
	0x65, 0x73, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x12, 0x2e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x75, 0x65, 0x73, 0x74, 0x2f, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xbf, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x12, 0x36, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a,
	0x1a, 0x27, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xbc, 0x01, 0x0a, 0x18, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x36, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x2a,
	0x27, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xbc, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x36, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27,
	0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xa8, 0x01, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x30,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22,
	0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x42, 0x5b, 0x5a, 0x59, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x4d, 0x61, 0x72, 0x6b, 0x6f, 0x56, 0x61, 0x73, 0x69, 0x6c, 0x69, 0x63, 0x2f, 0x41, 0x63,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_accommodation_service_accommodation_service_proto_rawDescOnce sync.Once
	file_accommodation_service_accommodation_service_proto_rawDescData = file_accommodation_service_accommodation_service_proto_rawDesc
)

func file_accommodation_service_accommodation_service_proto_rawDescGZIP() []byte {
	file_accommodation_service_accommodation_service_proto_rawDescOnce.Do(func() {
		file_accommodation_service_accommodation_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_accommodation_service_accommodation_service_proto_rawDescData)
	})
	return file_accommodation_service_accommodation_service_proto_rawDescData
}

var file_accommodation_service_accommodation_service_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_accommodation_service_accommodation_service_proto_goTypes = []interface{}{
	(*Accommodation)(nil),                          // 0: accommodation_service.Accommodation
	(*GetAllAccommodationsRequest)(nil),            // 1: accommodation_service.GetAllAccommodationsRequest
	(*GetAllAccommodationsResponse)(nil),           // 2: accommodation_service.GetAllAccommodationsResponse
	(*GetAccommodationByAvailabilityRequest)(nil),  // 3: accommodation_service.GetAccommodationByAvailabilityRequest
	(*GetAccommodationByAvailabilityResponse)(nil), // 4: accommodation_service.GetAccommodationByAvailabilityResponse
	(*CreateAccommodationRequest)(nil),             // 5: accommodation_service.CreateAccommodationRequest
	(*CreateAccommodationResponse)(nil),            // 6: accommodation_service.CreateAccommodationResponse
	(*Availability)(nil),                           // 7: accommodation_service.Availability
	(*GetAvailabilityByIdRequest)(nil),             // 8: accommodation_service.GetAvailabilityByIdRequest
	(*GetAvailabilityByIdResponse)(nil),            // 9: accommodation_service.GetAvailabilityByIdResponse
	(*GetAccommodationByIdRequest)(nil),            // 10: accommodation_service.GetAccommodationByIdRequest
	(*GetAccommodationByIdResponse)(nil),           // 11: accommodation_service.GetAccommodationByIdResponse
	(*GetAllAvailabilitiesRequest)(nil),            // 12: accommodation_service.GetAllAvailabilitiesRequest
	(*GetAllAvailabilitiesResponse)(nil),           // 13: accommodation_service.GetAllAvailabilitiesResponse
	(*CreateAvailabilityRequest)(nil),              // 14: accommodation_service.CreateAvailabilityRequest
	(*CreateAvailabilityResponse)(nil),             // 15: accommodation_service.CreateAvailabilityResponse
	(*UpdateAvailabilityRequest)(nil),              // 16: accommodation_service.UpdateAvailabilityRequest
	(*UpdateAvailabilityResponse)(nil),             // 17: accommodation_service.UpdateAvailabilityResponse
	(*FindAvailability)(nil),                       // 18: accommodation_service.FindAvailability
	(*SearchAvailabilityRequest)(nil),              // 19: accommodation_service.SearchAvailabilityRequest
	(*SearchAvailabilityResponse)(nil),             // 20: accommodation_service.SearchAvailabilityResponse
	(*DeleteAccommodationsByHostRequest)(nil),      // 21: accommodation_service.DeleteAccommodationsByHostRequest
	(*DeleteAccommodationsByHostResponse)(nil),     // 22: accommodation_service.DeleteAccommodationsByHostResponse
	(*GetEveryAccommodationRequest)(nil),           // 23: accommodation_service.GetEveryAccommodationRequest
	(*GetEveryAccommodationResponse)(nil),          // 24: accommodation_service.GetEveryAccommodationResponse
	(*AccommodationGrade)(nil),                     // 25: accommodation_service.AccommodationGrade
	(*AccommodationGradeDetails)(nil),              // 26: accommodation_service.AccommodationGradeDetails
	(*CreateAccommodationGradeRequest)(nil),        // 27: accommodation_service.CreateAccommodationGradeRequest
	(*CreateAccommodationGradeResponse)(nil),       // 28: accommodation_service.CreateAccommodationGradeResponse
	(*GetAllAccommodationGuestGradesRequest)(nil),  // 29: accommodation_service.GetAllAccommodationGuestGradesRequest
	(*GetAllAccommodationGuestGradesResponse)(nil), // 30: accommodation_service.GetAllAccommodationGuestGradesResponse
	(*UpdateAccommodationGradeRequest)(nil),        // 31: accommodation_service.UpdateAccommodationGradeRequest
	(*UpdateAccommodationGradeResponse)(nil),       // 32: accommodation_service.UpdateAccommodationGradeResponse
	(*DeleteAccommodationGradeRequest)(nil),        // 33: accommodation_service.DeleteAccommodationGradeRequest
	(*DeleteAccommodationGradeResponse)(nil),       // 34: accommodation_service.DeleteAccommodationGradeResponse
	(*GetAllAccommodationGradeRequest)(nil),        // 35: accommodation_service.GetAllAccommodationGradeRequest
	(*GetAllAccommodationGradeResponse)(nil),       // 36: accommodation_service.GetAllAccommodationGradeResponse
	(*FilterAvailabilityRequest)(nil),              // 37: accommodation_service.FilterAvailabilityRequest
	(*FilterAvailabilityResponse)(nil),             // 38: accommodation_service.FilterAvailabilityResponse
	(*timestamppb.Timestamp)(nil),                  // 39: google.protobuf.Timestamp
}
var file_accommodation_service_accommodation_service_proto_depIdxs = []int32{
	0,  // 0: accommodation_service.GetAllAccommodationsResponse.accommodations:type_name -> accommodation_service.Accommodation
	0,  // 1: accommodation_service.GetAccommodationByAvailabilityResponse.accommodation:type_name -> accommodation_service.Accommodation
	39, // 2: accommodation_service.Availability.StartDate:type_name -> google.protobuf.Timestamp
	39, // 3: accommodation_service.Availability.EndDate:type_name -> google.protobuf.Timestamp
	0,  // 4: accommodation_service.GetAvailabilityByIdResponse.accommodation:type_name -> accommodation_service.Accommodation
	7,  // 5: accommodation_service.GetAccommodationByIdResponse.availability:type_name -> accommodation_service.Availability
	7,  // 6: accommodation_service.GetAllAvailabilitiesResponse.availabilities:type_name -> accommodation_service.Availability
	39, // 7: accommodation_service.CreateAvailabilityRequest.StartDate:type_name -> google.protobuf.Timestamp
	39, // 8: accommodation_service.CreateAvailabilityRequest.EndDate:type_name -> google.protobuf.Timestamp
	39, // 9: accommodation_service.UpdateAvailabilityRequest.StartDate:type_name -> google.protobuf.Timestamp
	39, // 10: accommodation_service.UpdateAvailabilityRequest.EndDate:type_name -> google.protobuf.Timestamp
	39, // 11: accommodation_service.FindAvailability.StartDate:type_name -> google.protobuf.Timestamp
	39, // 12: accommodation_service.FindAvailability.EndDate:type_name -> google.protobuf.Timestamp
	39, // 13: accommodation_service.SearchAvailabilityRequest.StartDate:type_name -> google.protobuf.Timestamp
	39, // 14: accommodation_service.SearchAvailabilityRequest.EndDate:type_name -> google.protobuf.Timestamp
	18, // 15: accommodation_service.SearchAvailabilityResponse.FindAvailability:type_name -> accommodation_service.FindAvailability
	0,  // 16: accommodation_service.GetEveryAccommodationResponse.Accommodations:type_name -> accommodation_service.Accommodation
	39, // 17: accommodation_service.AccommodationGrade.DateOfGrade:type_name -> google.protobuf.Timestamp
	39, // 18: accommodation_service.AccommodationGradeDetails.DateOfGrade:type_name -> google.protobuf.Timestamp
	25, // 19: accommodation_service.CreateAccommodationGradeRequest.AccommodationGrade:type_name -> accommodation_service.AccommodationGrade
	26, // 20: accommodation_service.GetAllAccommodationGuestGradesResponse.AccommodationGradeDetails:type_name -> accommodation_service.AccommodationGradeDetails
	26, // 21: accommodation_service.GetAllAccommodationGradeResponse.AccommodationGradeDetails:type_name -> accommodation_service.AccommodationGradeDetails
	39, // 22: accommodation_service.FilterAvailabilityRequest.StartDate:type_name -> google.protobuf.Timestamp
	39, // 23: accommodation_service.FilterAvailabilityRequest.EndDate:type_name -> google.protobuf.Timestamp
	18, // 24: accommodation_service.FilterAvailabilityResponse.FindAvailability:type_name -> accommodation_service.FindAvailability
	1,  // 25: accommodation_service.AccommodationService.GetAllAccommodations:input_type -> accommodation_service.GetAllAccommodationsRequest
	5,  // 26: accommodation_service.AccommodationService.CreateAccommodation:input_type -> accommodation_service.CreateAccommodationRequest
	3,  // 27: accommodation_service.AccommodationService.GetAccommodationByAvailability:input_type -> accommodation_service.GetAccommodationByAvailabilityRequest
	12, // 28: accommodation_service.AccommodationService.GetAllAvailabilities:input_type -> accommodation_service.GetAllAvailabilitiesRequest
	8,  // 29: accommodation_service.AccommodationService.GetAvailabilityById:input_type -> accommodation_service.GetAvailabilityByIdRequest
	10, // 30: accommodation_service.AccommodationService.GetAccommodationById:input_type -> accommodation_service.GetAccommodationByIdRequest
	14, // 31: accommodation_service.AccommodationService.CreateAvailability:input_type -> accommodation_service.CreateAvailabilityRequest
	16, // 32: accommodation_service.AccommodationService.UpdateAvailability:input_type -> accommodation_service.UpdateAvailabilityRequest
	19, // 33: accommodation_service.AccommodationService.SearchAvailability:input_type -> accommodation_service.SearchAvailabilityRequest
	21, // 34: accommodation_service.AccommodationService.DeleteAccommodationsByHost:input_type -> accommodation_service.DeleteAccommodationsByHostRequest
	23, // 35: accommodation_service.AccommodationService.GetEveryAccommodation:input_type -> accommodation_service.GetEveryAccommodationRequest
	27, // 36: accommodation_service.AccommodationService.CreateAccommodationGrade:input_type -> accommodation_service.CreateAccommodationGradeRequest
	29, // 37: accommodation_service.AccommodationService.GetAllAccommodationGuestGrades:input_type -> accommodation_service.GetAllAccommodationGuestGradesRequest
	31, // 38: accommodation_service.AccommodationService.UpdateAccommodationGrade:input_type -> accommodation_service.UpdateAccommodationGradeRequest
	33, // 39: accommodation_service.AccommodationService.DeleteAccommodationGrade:input_type -> accommodation_service.DeleteAccommodationGradeRequest
	35, // 40: accommodation_service.AccommodationService.GetAllAccommodationGrade:input_type -> accommodation_service.GetAllAccommodationGradeRequest
	37, // 41: accommodation_service.AccommodationService.FilterAvailability:input_type -> accommodation_service.FilterAvailabilityRequest
	2,  // 42: accommodation_service.AccommodationService.GetAllAccommodations:output_type -> accommodation_service.GetAllAccommodationsResponse
	6,  // 43: accommodation_service.AccommodationService.CreateAccommodation:output_type -> accommodation_service.CreateAccommodationResponse
	4,  // 44: accommodation_service.AccommodationService.GetAccommodationByAvailability:output_type -> accommodation_service.GetAccommodationByAvailabilityResponse
	13, // 45: accommodation_service.AccommodationService.GetAllAvailabilities:output_type -> accommodation_service.GetAllAvailabilitiesResponse
	9,  // 46: accommodation_service.AccommodationService.GetAvailabilityById:output_type -> accommodation_service.GetAvailabilityByIdResponse
	11, // 47: accommodation_service.AccommodationService.GetAccommodationById:output_type -> accommodation_service.GetAccommodationByIdResponse
	15, // 48: accommodation_service.AccommodationService.CreateAvailability:output_type -> accommodation_service.CreateAvailabilityResponse
	17, // 49: accommodation_service.AccommodationService.UpdateAvailability:output_type -> accommodation_service.UpdateAvailabilityResponse
	20, // 50: accommodation_service.AccommodationService.SearchAvailability:output_type -> accommodation_service.SearchAvailabilityResponse
	22, // 51: accommodation_service.AccommodationService.DeleteAccommodationsByHost:output_type -> accommodation_service.DeleteAccommodationsByHostResponse
	24, // 52: accommodation_service.AccommodationService.GetEveryAccommodation:output_type -> accommodation_service.GetEveryAccommodationResponse
	28, // 53: accommodation_service.AccommodationService.CreateAccommodationGrade:output_type -> accommodation_service.CreateAccommodationGradeResponse
	30, // 54: accommodation_service.AccommodationService.GetAllAccommodationGuestGrades:output_type -> accommodation_service.GetAllAccommodationGuestGradesResponse
	32, // 55: accommodation_service.AccommodationService.UpdateAccommodationGrade:output_type -> accommodation_service.UpdateAccommodationGradeResponse
	34, // 56: accommodation_service.AccommodationService.DeleteAccommodationGrade:output_type -> accommodation_service.DeleteAccommodationGradeResponse
	36, // 57: accommodation_service.AccommodationService.GetAllAccommodationGrade:output_type -> accommodation_service.GetAllAccommodationGradeResponse
	38, // 58: accommodation_service.AccommodationService.FilterAvailability:output_type -> accommodation_service.FilterAvailabilityResponse
	42, // [42:59] is the sub-list for method output_type
	25, // [25:42] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_accommodation_service_accommodation_service_proto_init() }
func file_accommodation_service_accommodation_service_proto_init() {
	if File_accommodation_service_accommodation_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_accommodation_service_accommodation_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Accommodation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAccommodationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAccommodationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccommodationByAvailabilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccommodationByAvailabilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccommodationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccommodationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Availability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailabilityByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailabilityByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccommodationByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccommodationByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAvailabilitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAvailabilitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAvailabilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAvailabilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAvailabilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAvailabilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAvailability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAvailabilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAvailabilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccommodationsByHostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccommodationsByHostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEveryAccommodationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEveryAccommodationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccommodationGrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccommodationGradeDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccommodationGradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccommodationGradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAccommodationGuestGradesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAccommodationGuestGradesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccommodationGradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccommodationGradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccommodationGradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccommodationGradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAccommodationGradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAccommodationGradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterAvailabilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_service_accommodation_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterAvailabilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_accommodation_service_accommodation_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_accommodation_service_accommodation_service_proto_goTypes,
		DependencyIndexes: file_accommodation_service_accommodation_service_proto_depIdxs,
		MessageInfos:      file_accommodation_service_accommodation_service_proto_msgTypes,
	}.Build()
	File_accommodation_service_accommodation_service_proto = out.File
	file_accommodation_service_accommodation_service_proto_rawDesc = nil
	file_accommodation_service_accommodation_service_proto_goTypes = nil
	file_accommodation_service_accommodation_service_proto_depIdxs = nil
}
